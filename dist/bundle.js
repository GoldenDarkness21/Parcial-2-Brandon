(()=>{"use strict";var t,e;!function(t){t.ADD_TASK="ADD_TASK",t.REMOVE_TASK="REMOVE_TASK",t.TOGGLE_TASK="TOGGLE_TASK"}(t||(t={})),function(t){t.STORE="STORE"}(e||(e={}));let s=(({key:t,defaultValue:e})=>{const s=localStorage.getItem(t)||sessionStorage.getItem(t);return s?JSON.parse(s):e})({key:e.STORE,defaultValue:{tasks:[]}}),a=[];const i=i=>{const n=((e,s)=>{const{action:a,payload:i}=e;switch(a){case t.ADD_TASK:return Object.assign(Object.assign({},s),{tasks:[...s.tasks,i]});case t.REMOVE_TASK:return Object.assign(Object.assign({},s),{tasks:s.tasks.filter((t=>t.id!==i))});case t.TOGGLE_TASK:return Object.assign(Object.assign({},s),{tasks:s.tasks.map((t=>t.id===i?Object.assign(Object.assign({},t),{state:!t.state}):t))});default:return s}})(i,JSON.parse(JSON.stringify(s)));var o;s=n,o=n,(({key:t,value:e,session:s=!1})=>{const a=s?sessionStorage:localStorage,i=JSON.stringify(e);a.setItem(t,i)})({key:e.STORE,value:o}),a.forEach((t=>t.render()))},n=t=>{a=[...a,t]};class o extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),n(this)}connectedCallback(){this.render()}render(){var e;this.shadowRoot&&(this.shadowRoot.innerHTML='\n        <h2>Juanes Store</h2>\n         <form class="task-form">\n            <input type="text" id="text-input" placeholder="Title" required />\n            <input type="text" id="text-input" placeholder="Description" required />\n            <input type="text" id="text-input" placeholder="Price" required />\n            <input type="text" id="text-input" placeholder="Category" required />\n            <input type="text" id="text-input" placeholder="Rating Rate" required />\n            <input type="text" id="text-input" placeholder="Img" required />\n            <button type="submit" id="add-btn">Add</button>\n         </form>\n        ');const s=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(".task-form");null==s||s.addEventListener("submit",(e=>{var s;e.preventDefault();const a=null===(s=this.shadowRoot)||void 0===s?void 0:s.querySelector("#text-input"),n={id:(new Date).getTime(),title:a.value,description:a.value,price:a.value,category:a.value,rating:a.value,state:!1};var o;i((o=n,{action:t.ADD_TASK,payload:o}))}))}}var r;customElements.define("task-form",o),function(t){t.uid="uid",t.tasktitle="tasktitle",t.taskdescription="taskdescription",t.taskprice="taskprice",t.taskcategory="taskcategory",t.taskrating="taskrating",t.state="state"}(r||(r={}));class c extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),n(this)}static get observedAttributes(){return Object.keys({uid:null,tasktitle:null,taskdescription:null,taskprice:null,taskcategory:null,taskrating:null,state:null})}connectedCallback(){this.render()}attributeChangedCallback(t,e,s){switch(t){case r.uid:this.uid=s?Number(s):void 0;break;case r.state:this.state=s?"true"===s:void 0;break;default:this[t]=s}this.render()}render(){var e,s;if(this.shadowRoot){this.shadowRoot.innerHTML=`\n\t\t\t\t<article style="text-decoration: ${this.state?"line-through":"none"}; color: ${this.state?"gray":"black"};">\n\t\t\t\t\t<h2>Title<h2>\n\t\t\t\t\t<h4>${this.tasktitle}</h4>\n\t\t\t\t\t<h2>Description<h2>\n\t\t\t\t\t<h4>${this.taskdescription}</h4>\n\t\t\t\t\t<h2>Price<h2>\n\t\t\t\t\t<h4>${this.taskprice}</h4>\n\t\t\t\t\t<h2>Category<h2>\n\t\t\t\t\t<h4>${this.taskcategory}</h4>\n\t\t\t\t\t<h2>Rating<h2>\n\t\t\t\t\t<h4>${this.taskrating}</h4>\n\t\t\t\t\t<button class="delete-task">X</button>\n\t\t\t\t</article>\n\t\t\t`;const a=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(".delete-task"),n=null===(s=this.shadowRoot)||void 0===s?void 0:s.querySelector(".check-task");null==a||a.addEventListener("click",(()=>{var e;i((e=this.uid,{action:t.REMOVE_TASK,payload:e}))})),null==n||n.addEventListener("change",(()=>{var e;i((e=this.uid,{action:t.TOGGLE_TASK,payload:e}))}))}}}customElements.define("task-item",c);class d extends HTMLElement{constructor(){super(),this.taskItems=[],this.attachShadow({mode:"open"}),n(this),s.tasks.forEach((t=>{const{id:e,title:s,state:a}=t,i=this.ownerDocument.createElement("task-item");i.setAttribute(r.uid,e),i.setAttribute(r.tasktitle,s),i.setAttribute(r.taskprice,s),i.setAttribute(r.taskcategory,s),i.setAttribute(r.taskrating,s),i.setAttribute(r.state,a),this.taskItems.push(i)}))}connectedCallback(){this.render()}render(){if(this.shadowRoot){const t=this.ownerDocument.createElement("section"),e=this.ownerDocument.createElement("section");t.innerHTML="<h3>Products</h3>",this.taskItems.forEach((s=>{s.state?e.appendChild(s):t.appendChild(s)})),this.shadowRoot.appendChild(t),this.shadowRoot.appendChild(e)}}}customElements.define("task-list",d);class l extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),n(this)}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML="\n\t\t<task-form></task-form>\n\t\t<task-list></task-list>\n\t\t")}}customElements.define("app-container",l)})();